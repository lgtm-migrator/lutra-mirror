@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> . 
@prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#> . 
@prefix owl:    <http://www.w3.org/2002/07/owl#> . 
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#> . 
@prefix foaf:   <http://xmlns.com/foaf/0.1/> . 
@prefix dbp:    <http://dbpedia.org/ontology/> . 
@prefix ex:     <http://example.com/ns#> . 
@prefix ottr:   <http://ns.ottr.xyz/0.4/> . 
@prefix ax:     <http://tpl.ottr.xyz/owl/axiom/0.1/> . 
@prefix rstr:   <http://tpl.ottr.xyz/owl/restriction/0.1/> .
ex:OrganizationMembers[
    ottr:IRI ?org, xsd:string ?name, xsd:int ?age, ottr:IRI ?url,
    ? ottr:IRI ?loc, !? ottr:IRI ?relation,
    List<ottr:IRI>   ?members,
    List<xsd:string> ?memberFirstNames,
    List<xsd:string> ?memberLastNames,
    List<ottr:IRI>   ?memberMboxes]
:: {
  ex:Organization(?org, ?name, ?age, ?url, ?loc),
  zipMin | ex:Person(++?members, ++?memberFirstNames, ++?memberLastNames, ++?memberMboxes),
  ex:Members(?org, ?members, ?relation),
  ex:Friends(?members) 
} .

#### no need to change the templates below this line

ex:Type[ottr:IRI ?individual, ottr:IRI ?type] :: {
  ottr:Triple(?individual, rdf:type, ?type)
} .

ex:Person[ ottr:IRI ?person=_:person, xsd:string ?firstName, xsd:string ?lastName, ottr:IRI ?email ] :: {
  ex:Type (?person, foaf:Person ),
  ottr:Triple (?person, foaf:firstName, ?firstName ),
  ottr:Triple (?person, foaf:lastName, ?lastName ),
  ottr:Triple (?person, foaf:mbox, ?email )
} .

ex:Organization[ottr:IRI ?org, xsd:string ?name, xsd:int ?age, ottr:IRI ?url, ottr:IRI ?loc=ex:norway] :: {
    ex:Type(?org, foaf:Organization),
    ottr:Triple(?org, foaf:name, ?name),
    ottr:Triple(?org, foaf:age, ?age),
    ottr:Triple(?org, dbp:locatedIn, ?loc),
    ottr:Triple(?org, foaf:homepage, ?url)
} .

ex:Members[ ottr:IRI ?org, List<ottr:IRI> ?members, !? ottr:IRI ?relation ] :: {
    cross | ex:Member(?org, ++?members, ?relation)
} .

ex:Member[ottr:IRI ?org, ottr:IRI ?person, ! ottr:IRI ?relation=foaf:member] :: {
    ottr:Triple(?org, ?relation, ?person)
} .

ex:Friends[ List<ottr:IRI> ?friends] :: {
  cross | ottr:Triple(++?friends, foaf:knows, ++?friends)
} .
