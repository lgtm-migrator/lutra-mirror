image: maven:3.6.1-jdk-11

stages:
  - build
  - test
  - deploy
  - release

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .m2/repository/
    - ./**/target/

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS compile

test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS verify

develop_snapshot:
  stage: deploy
  script:
    - cp lutra-cli/target/lutra.jar lutra.jar
    - cp lutra-restapi/target/lutra.war lutra.war
    - apt-get update -qq && apt-get install -y -qq sshpass
    - sshpass -V
    - export SSHPASS=$FTP_PASS
    - cp lutra.jar lutra-snapshot.jar
    - sshpass -e scp -o stricthostkeychecking=no lutra-snapshot.jar $FTP_HOST:/www.ottr.xyz/downloads/
  only:
    - develop
  artifacts:
    expire_in: 1 week
    paths:
      - lutra.jar
      - lutra.war

tag_release:
  stage: deploy
  only:
    - tags
  script:
    - cp lutra-cli/target/lutra.jar lutra.jar
    - cp lutra-restapi/target/lutra.war lutra.war
    - apt-get update -qq && apt-get install -y -qq sshpass
    - sshpass -V
    - export SSHPASS=$FTP_PASS
    - cp lutra.jar lutra-$CI_COMMIT_TAG.jar
    - cp lutra.jar lutra-latest.jar
    - sshpass -e scp -o stricthostkeychecking=no lutra-$CI_COMMIT_TAG.jar lutra-latest.jar $FTP_HOST:/www.ottr.xyz/downloads/
  artifacts:
    expire_in: 4 mos 1 day
    paths:
    - lutra.jar
    - lutra.war

## This job creates a release in GitLab.
release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                 # Run this job when a tag is created
  script:
    - echo "running release_job"
  release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'

deploy-docker-image:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd lutra-restapi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  only:
    - master

include:
  - template: Code-Quality.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"
  - template: Security/License-Scanning.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"
  - template: Security/Secret-Detection.gitlab-ci.yml
    rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"
  - template: Security/SAST.gitlab-ci.yml
    
spotbugs-sast:
  dependencies:
    - build
  rules:
      - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master"
  variables:
    MAVEN_REPO_PATH: $CI_PROJECT_DIR/.m2/repository
    COMPILE: "false"
  artifacts:
    reports:
      sast: gl-sast-report.json
      